# -*- coding: utf-8 -*-
"""Image Processing with OpenCV

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/#fileId=https%3A//storage.googleapis.com/kaggle-colab-exported-notebooks/image-processing-with-opencv-fec86128-065b-45e9-9e11-c8dd17eee2f1.ipynb%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com/20240829/auto/storage/goog4_request%26X-Goog-Date%3D20240829T204354Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3Db6866df45b13248d06b607a098c3694dd19983b747f698b32e4a09f009ad5b0bcc51132c2d358dd455cf4790428c446bb5f4d2f62f7b67625b108b1f2d335824eb57236183c73e1e671e29aab0a03decd9909a73ddf7bf359a754fe3a243ff1c8627b98ecd06e86822d91d34d2e2ded79d670a40a4415f8dbd0b2f8edcaff3ba1811fc46a43d3694c5304271007cf89d80a2dca3332eee760a597fcc35d0033b151493cb19dd5d7274652b8797cb81f2e65b6dfb36975ef25d5c0f82fc1dd4856a80ec1253d417e64dfd39171fea250d38a5bae5cb104818a59f450ae1b47ae480c9ec2854e6bf14511bc63a0cff6dc3b32f873159bb589b12e2a6e41c7d1cdf
"""

import pandas as pd
import numpy as np
import cv2

from glob import glob
import matplotlib.pylab as plt

dog_file = glob('../input/cat-and-dog/training_set/training_set/dogs/*.jpg')
cat_file = glob('../input/cat-and-dog/training_set/training_set/cats/*.jpg')

"""> Read image with the Matplot lib"""

img_mplt= plt.imread(dog_file[0])
img_mplt

"""> Type"""

type(img_mplt)

"""> Shape"""

img_mplt.shape

"""> Read image with opencv"""

img_cv = cv2.imread(cat_file[20])
img_cv

fig, ax = plt.subplots(figsize=(10,10))
ax.imshow(img_mplt)
plt.show()

fig, ax = plt.subplots(figsize=(10,10))
ax.imshow(img_mplt)
ax.axis('off')
plt.show()

fig, axs=plt.subplots(1,3 ,figsize=(15,5))
axs[0].imshow(img_mplt[:,:,0],cmap='Reds')
axs[1].imshow(img_mplt[:,:,1],cmap='Greens')
axs[2].imshow(img_mplt[:,:,2],cmap='Blues')
axs[0].axis('off')
axs[1].axis('off')
axs[2].axis('off')
plt.show()

fig, axs=plt.subplots(1,2, figsize=(10,5))
axs[0].imshow(img_cv)
axs[1].imshow(img_mplt)
axs[0].set_title("CV Image")
axs[1].set_title("Matplot lib Image")
plt.show()

"""> Image Manipulation"""

img=plt.imread(dog_file[84])
fig, ax = plt.subplots(figsize=(8,8))
ax.imshow(img)
ax.axis('off')
plt.show()

img_gry=cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)
img_gry.shape
fig, ax = plt.subplots(figsize=(8,8))
ax.imshow(img_gry, cmap='Greys')
ax.axis('off')
ax.set_title("Grey Image")
plt.show()

"""> Resize and Scaling"""

img_rezie=cv2.resize(img,None, fx=0.25, fy=0.25)
fix , ax = plt.subplots(figsize=(8,8))
ax.imshow(img_rezie)
ax.axis('off')
plt.show()

"""> Resize"""

img_rezie1=cv2.resize(img,(100,100))
fix , ax = plt.subplots(figsize=(8,8))
ax.imshow(img_rezie1)
ax.axis('off')
plt.show()

img_rezie=cv2.resize(img,(5000,5000), interpolation=cv2.INTER_CUBIC)
fix , ax = plt.subplots(figsize=(8,8))
ax.imshow(img_rezie)
ax.axis('off')
plt.show()

img_rezie.shape

"""> Sharpen Image"""

kernel_sharp = np.array([[-1, -1, -1],
                         [-1, 9, -1],
                         [-1, -1, -1]])

sharpened_img = cv2.filter2D(img, -1, kernel_sharp)

fig, ax = plt.subplots(figsize=(8, 8))
ax.imshow(cv2.cvtColor(sharpened_img, cv2.COLOR_BGR2RGB))
ax.axis('off')
plt.show()

"""> Bluring the image"""

kernal_3= np.ones((3,3), np.float32)/ 9
blurred= cv2.filter2D(img,-1, kernal_3)
fix , ax = plt.subplots(figsize=(8,8))
ax.imshow(blurred)
ax.axis('off')
plt.show()

"""> Saving the image"""

plt.imsave('mplt_dog.png', blurred)

cv2.imwrite('cvs_dog.png',sharpened_img)